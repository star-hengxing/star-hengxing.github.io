<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C/C&#43;&#43; on Heng Xing Blog</title>
    <link>https://star-hengxing.github.io/tags/c/c&#43;&#43;/</link>
    <description>Recent content in C/C&#43;&#43; on Heng Xing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://star-hengxing.github.io/tags/c/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Xmake 生成静态和动态库</title>
      <link>https://star-hengxing.github.io/post/xmake/lib/</link>
      <pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://star-hengxing.github.io/post/xmake/lib/</guid>
      <description>前言 当前环境在 Windows，默认了解 C/C++ 编译流程。 不一定是最佳实践。 静态库 target 下直接考虑用set_kind(&amp;quot;static&amp;quot;)即可。&#xA;有一个可以注意的地方，可以使用set_policy(&amp;quot;build.merge_archive&amp;quot;, true)来合并所有静态库。（大概是用在分发二进制的时候？）&#xA;动态库 考虑到 windows dll 要在函数声明__declspec(dllexport)导出接口（也可以用.def文件）。&#xA;手动给每个符号声明很麻烦，需要 build system 来自动化。&#xA;xmake 对此做了支持，只需要在 target 下添加：&#xA;-- C add_rules(&amp;#34;utils.symbols.export_all&amp;#34;) -- C++ add_rules(&amp;#34;utils.symbols.export_all&amp;#34;, {export_classes = true}) 就会生成正确 dll 文件了。&#xA;如果想要自定义导出符号，使用utils.symbols.export_list。&#xA;直接配置 假设test目录下是一个库，把上面静态库和动态库的用法结合起来：&#xA;add_includedirs(&amp;#34;include&amp;#34;, {public = true}) target(&amp;#34;add&amp;#34;) set_kind(&amp;#34;$(kind)&amp;#34;) add_files(&amp;#34;src/add.cpp&amp;#34;) if is_kind(&amp;#34;shared&amp;#34;) and is_plat(&amp;#34;windows&amp;#34;) then add_rules(&amp;#34;utils.symbols.export_all&amp;#34;, {export_classes = true}) end target(&amp;#34;sub&amp;#34;) set_kind(&amp;#34;$(kind)&amp;#34;) add_files(&amp;#34;src/sub.cpp&amp;#34;) if is_kind(&amp;#34;shared&amp;#34;) and is_plat(&amp;#34;windows&amp;#34;) then add_rules(&amp;#34;utils.symbols.export_all&amp;#34;, {export_classes = true}) end target(&amp;#34;test&amp;#34;) set_kind(&amp;#34;$(kind)&amp;#34;) add_files(&amp;#34;src/test.</description>
    </item>
  </channel>
</rss>
