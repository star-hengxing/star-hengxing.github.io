<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编译原理 on Heng Xing Blog</title>
    <link>https://star-hengxing.github.io/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</link>
    <description>Recent content in 编译原理 on Heng Xing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 29 May 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://star-hengxing.github.io/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从代码到程序</title>
      <link>https://star-hengxing.github.io/post/compiler/</link>
      <pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate>
      <guid>https://star-hengxing.github.io/post/compiler/</guid>
      <description>随手记录的一些编译原理笔记。&#xA;现代编译器分为前后端，为了进一步降低复杂度(模块化)，前端的流程通常是：&#xA;词法分析 -&amp;gt; 语法分析 -&amp;gt; 语义分析 上一步的输出是下一步的输入。&#xA;词法分析 常见的应用有正则表达式。&#xA;先定义一个映射， tokens = map(字符串)&#xA;这个token是啥呢，比如说我有下面这个算式：&#xA;1 + 2 * ３ 解析后：&#xA;值 类型 １ 整数 + 加号 2 整数 * 乘号 3 整数 我们暂时不知道有什么用，但现在我们解决了字符串里的空格，如果字符串里有奇怪的字符，比如#啥的，也可以报错。&#xA;怎么解析其实也是个大问题，通常用自动机解决这个问题。&#xA;语法分析 把词法分析输出的一堆token，组合成句子，检查句子的语法，最后生成抽象语法树(AST)&#xA;AST用处广泛，比如：&#xA;编辑器错误提示 代码格式化 代码高亮 代码自动补全 </description>
    </item>
  </channel>
</rss>
