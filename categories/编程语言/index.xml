<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程语言 on Heng Xing Blog</title>
    <link>https://star-hengxing.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in 编程语言 on Heng Xing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 11 Sep 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://star-hengxing.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>多态</title>
      <link>https://star-hengxing.github.io/post/pl/</link>
      <pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://star-hengxing.github.io/post/pl/</guid>
      <description>起因 在实现我的离线渲染器中，用到了大量oop（其实就是基类然后继承）&#xA;我有一个Shape基类，里面接口全声明为标准的纯虚函数接口&#xA;virtual TYPE FUNCTION() const = 0; 当你继承这个类后，继承类必须实现这个接口，不然编译报错&#xA;一开始还没有写实现，但类已经继承了，没办法，在接口开个洞（真难看啊&#xA;virtual TYPE FUNCTION() const {} 于是我基于 C++20 标准库的source_location写了一个&#xA;[[noreturn]] inline void unimplemented(const std::source_location location = std::source_location::current()) { std::cerr &amp;lt;&amp;lt; &amp;#39;\n&amp;#39; &amp;lt;&amp;lt; &amp;#39;[&amp;#39; &amp;lt;&amp;lt; location.file_name() &amp;lt;&amp;lt; &amp;#39;:&amp;#39; &amp;lt;&amp;lt; location.line() &amp;lt;&amp;lt; &amp;#34;] &amp;#34; &amp;lt;&amp;lt; location.function_name() &amp;lt;&amp;lt; &amp;#34; unimplemented!\n&amp;#34;; exit(-1); } 还没有实现接口的时候留下unimplemented，然后运行时报错&#xA;source_location暂时只有clang不支持（clang对C++20支持太慢了&#xA;网上冲浪时看到有人说，接口虚函数实现动态多态是一种糟糕实践，优雅的做法是Existential Type，在C++社区称为sean parent polymorphism&#xA;详细可以看这个视频&#xA;John Bandela “Polymorphism != Virtual: Easy, Flexible Runtime Polymorphism Without Inheritance”&#xA;reddit上的关于该视频的讨论&#xA;什么是多态 特定多态 Ad hoc polymorphism</description>
    </item>
  </channel>
</rss>
