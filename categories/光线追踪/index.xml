<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>光线追踪 on 恒星的小站</title>
    <link>https://star-hengxing.github.io/categories/%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/</link>
    <description>Recent content in 光线追踪 on 恒星的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 30 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://star-hengxing.github.io/categories/%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>渲染进阶</title>
      <link>https://star-hengxing.github.io/p/%E6%B8%B2%E6%9F%93%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://star-hengxing.github.io/p/%E6%B8%B2%E6%9F%93%E8%BF%9B%E9%98%B6/</guid>
      <description>图形笑话三则 来点图程破防乐子 无内鬼，来点图形笑话 再来点图程破防乐子 免费渲染模型 McGuire Computer Graphics Archive Rendering Resources 博客 A GRAPHICS GUY&amp;rsquo;S NOTE Computer Graphics IQ YangWC&amp;rsquo;s Blog AirGuanZ 《高级计算机图形学——真实感图像合成》目录及序言 课程 CS 87/287 | RENDERING ALGORITHMS UCSD CSE 272: Advanced Image Synthesis Advanced Graphics 各种效果 光谱 Simple Spectral Spectral Ray Tracing 天空 The Sky Dome Appearance Project 彩虹 Physically-based simulation of rainbows 动物毛发 An Efficient and Practical Near and Far Field Fur Reflectance Model 肥皂泡 Chemomechanical Simulation of Soap Film Flow on Spherical Bubbles FQA （其实就是把群友讨论结果收藏一下</description>
    </item>
    
    <item>
      <title>光线与各种几何图形求交</title>
      <link>https://star-hengxing.github.io/p/%E5%85%89%E7%BA%BF%E4%B8%8E%E5%90%84%E7%A7%8D%E5%87%A0%E4%BD%95%E5%9B%BE%E5%BD%A2%E6%B1%82%E4%BA%A4/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://star-hengxing.github.io/p/%E5%85%89%E7%BA%BF%E4%B8%8E%E5%90%84%E7%A7%8D%E5%87%A0%E4%BD%95%E5%9B%BE%E5%BD%A2%E6%B1%82%E4%BA%A4/</guid>
      <description>在一些基础的光线追踪教程中，光线求交通常发生在世界空间(world space)
但在离线渲染器中(比如PBRT)，光线求交发生在几何图形自己的局部空间(local/object/model space)
这是有好处的，比如说简化求交代码，相交表面的normal和uv也很容易计算
下面就记录一些几何求交的做法，自身经验有限，如有错误请指出
前提 这里采用的是y轴朝上的右手坐标系，-z轴指向屏幕里，x轴在右手 默认光线已经变换到对象的局部空间 使用几何体的变换矩阵和其逆矩阵，求交时将光线变换到对象空间
$$ Ray(t)=o+td (t &amp;gt; 0) $$
$$ Ray_{object}=M^{-1}Ray_{world} $$
矩形(Rectangle) 假设矩形高度为0，躺在xz平面上。长和宽控制矩形大小
忽略平行于平面的光线
if(is_zero(ray.direction.y)) return false; 使用高度计算相交点 $$ t=\frac{0 - o_{y}}{d_{y}} $$
const auto t = ray.inv_at&amp;lt;Axis::Y&amp;gt;(0); const auto [x, y, z] = ray.at(t); 在矩形范围内的点才算相交成功
if(std::abs(x) &amp;gt; length || std::abs(z) &amp;gt; width) return false; 球(Sphere) 假设球心在原点，半径控制球的大小
三维空间中球的一般方程 $$ x^{2}+y^{2}+z^{2}=r^{2} $$
将光线代入方程 $$ (o+td)^{2}=r^{2} $$
整理可得关于t的一元二次方程 $$ d^{2}t^{2}+2odt+o^{2}-r^{2}=0\ \begin{align*} &amp;amp; a=d^{2}\ &amp;amp; b=2od\ &amp;amp; c=o^{2}-r^{2} \end{align*} $$</description>
    </item>
    
    <item>
      <title>离线渲染-光线追踪框架学习资料</title>
      <link>https://star-hengxing.github.io/p/%E7%A6%BB%E7%BA%BF%E6%B8%B2%E6%9F%93-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://star-hengxing.github.io/p/%E7%A6%BB%E7%BA%BF%E6%B8%B2%E6%9F%93-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</guid>
      <description>GAMES101:现代计算机图形学入门 网课，可在b站上观看
assignment 5-7 是光线追踪的作业
如果对光栅化，几何，动画与模拟，不感兴趣，可以只看Lecture 13-20（个人建议：把整套课看完也是不错的）
Taichi课程 课程主页
网课，其中6-7讲涉及光线追踪
Peter Shirley写的光线追踪三部曲 Ray Tracing in One Weekend Ray Tracing: The Next Week Ray Tracing: The Rest of Your Life 书中配套代码，在网上能搜到这三本的笔记和翻译版本
我认为这是光线追踪入门的最好教程
Daily Pathtracer Aras Pranckevičius大佬写的教程
介绍 博客
Nori an educational ray tracer
主页
5个assignment
PBRT Physically Based Rendering:From Theory To Implementation
这本书是学习离线渲染系统书（离线渲染圣经），配套代码在github上
网上在线阅读
此为光线追踪进阶书籍
书 Ray Tracing Gems Advanced global illumination Fundamentals of Computer Graphics Real-Time Rendering 全局光照技术 杂类 github上收集的图形学资料 milo yip的用JavaScript玩转计算机图形学-光线追踪入门 scratchapixel，图形学网站，对细节讲解很详细，配套代码 99行代码写出路径追踪-smallpt real-time-rendering，网站内附带很多图形学资料 mitsuba,一个开源渲染器 stackexchange的计算机图形学板块 </description>
    </item>
    
  </channel>
</rss>
